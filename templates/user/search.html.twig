{% extends 'base.html.twig' %}

{% block title %}Search{% endblock %}
{% block header %}

{% endblock %}

{% block sidebar %}

{% endblock %}

{% block footer %}

{% endblock %}

{% block body %}

<style>
    /* Your CSS style */
    .suggestion {
        padding: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .suggestion:hover {
        background-color: #f9f9f9;
    }
</style>

<h1>Search user</h1>

<form id="searchForm">
    <input type="text" id="searchInput" placeholder="Rechercher  user...">
</form>

<div id="suggestions"></div>
<div id="reclamationDetails"></div>

<script>
    const searchInput = document.getElementById('searchInput');
    const suggestionsDiv = document.getElementById('suggestions');
    const reclamationDetailsDiv = document.getElementById('reclamationDetails');

    suggestionsDiv.addEventListener('click', function(event) {
        if (event.target && event.target.nodeName === 'DIV') {
            const selectedSuggestion = event.target;
            const idr = selectedSuggestion.dataset.idr;

            fetch(`/user/details/${idr}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.text();
                })
                .then(detailsHtml => {
                    reclamationDetailsDiv.innerHTML = detailsHtml;
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                });

            searchInput.value = selectedSuggestion.textContent;
            searchInput.focus(); // Focus on the search field after selection

            performSearch(searchInput.value.trim());
        }
    });

    searchInput.addEventListener('input', function() {
        const searchString = searchInput.value.trim();

        if (searchString === '') {
            suggestionsDiv.innerHTML = ''; // Clear suggestions if the field is empty
            return;
        }

        fetch(`/user/search?q=${searchString}`)
            .then(response => response.json())
            .then(data => {
                suggestionsDiv.innerHTML = '';
                data.users.forEach(user => {
                    const suggestion = document.createElement('div');
                    suggestion.textContent = user.username;
                    suggestion.classList.add('suggestion');
                    suggestion.dataset.idr = String(user.iduser); // Convert iduser to string

                    suggestionsDiv.appendChild(suggestion);
                });
            });
    });

    function performSearch(searchString) {
        fetch(`/user/search?q=${searchString}`)
            .then(response => response.json())
            .then(data => {
                // Logic to handle the search response
                // ...

                // For example, display data in the console
                console.log(data);
            });
    }
</script>
{% endblock %}
